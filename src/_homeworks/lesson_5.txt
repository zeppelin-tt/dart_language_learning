1. Операции с List
   В этом задании можно (и даже нужно) иногда создавать новые экземпляры листов и продолжать уже с ними
   В этом задании НЕЛЬЗЯ использовать циклы. Толкьо методы List и Iterable

a) Создайте List<int> из 20 случайных чисел в диапазоне от 0 до 100. Выведите в консоль.
   Для генерации случайного числа использовать Random().nextInt(100) из пакета math.
   Не следует каждый раз создавать экземляр класса Random()
b) Выведите в консоль длину листа.
с) Уберите из листа все числа, кратные 5 и 7. Выведите в консоль.
d) Отсортируйте лист по возрастанию. Выведите в консоль.
e) Отсортируйте лист таким образом, что сначала идут четные, затем нечетные,
   при этом не нарушая сортировку по возрастанию, внутри четной и нечетных частей. Выведите в консоль.
   Для этого создайте собственную функцию-компаратор.
f) Удалите первый и последний элемент списка. Выведите в консоль.
g) Измените все элементы листа, добавив к ним 1. Выведите в консоль.
h) Добавьте в лист еще елементы, каждый из которых будет на 100 больше элемента из списка. Выведите в консоль.
   Используйте функцию expand
i) Перемешайте элементы листа в случайном порядке. Выведите в консоль.
j) Найдите первое число больше 100 в листе. Выведите в консоль.
k) Найдите индекс этого числа. Выведите в консоль.
l) Проверить, находится ли в списке хотя бы одно число из 100, 37, 55, 99, 64. Результат проверки вывестив  консоль.
m) Посчитать сумму всех чисел в листе. Выведите в консоль.
n) Превратить все элементы листа в String таким образом, чтобы каждый лемемент был 'Number <element>'.
   Выведите в консоль.
o) Используя лист из задания n, превратите оего обратно в List<int> при помощи функции int.parse()
   и функциями класса String.
   При помощи функции expand каждый элемент запишите трижды в лист.
   Выведите в консоль.

2. Операции с Set (так как создается по дефолту LinkedHashSet, они, в большинстве своем, повторяют операции из List)

Создайте Set из последнего результирующего листа прошлого задания.

3. Операции с Map

a) Создайте Лист из последнего сета. Создайте Map<int, int> из листа, используя функцию asMap() листа.
   Выведите в консоль.
   Обратите внимание на специфику метода asMap().
b) Создать объект GoldenRationSize(int smallSide), c полями int smallSide,
   int bigSide и переопределением поля toString().
   Большая сторона высчитывается через коэффициент золотого сечения и округляется.
c) Заменить values в мапе на объекты GoldenRationSize, передавая значение в конструктор.
   должна получиться Map<int, GoldenRationSize>. Выведите в консоль.


Не успел или забыл рассказать, изучите самим:
1. Iterator
2. односвязный, двусвязные списки
